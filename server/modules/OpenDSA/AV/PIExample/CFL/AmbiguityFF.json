{
    "translations": {
      "en": {
        "q2": {
          "type": "select",
          "description": "$\\textbf{Example}$. Expression grammar<br> $G=(\\{E,I\\},\\{a,b,+,∗,(,)\\},E,P)$,$P$=<br> $E \\rightarrow E+E | E*E | (E) | I$ <br>    $I\\rightarrow a | b$ <br> Derivation of $a+b∗a$ is:<br> $E\\Rightarrow \\underline{E}+E\\Rightarrow \\underline{I}+E\\Rightarrow a+\\underline{E}\\Rightarrow a+\\underline{E}*E\\Rightarrow a+\\underline{I}*E\\Rightarrow a+b*\\underline{E}\\Rightarrow a+b*\\underline{I}\\Rightarrow a+b*a$<br> Corresponding derivation tree is:",
          "question": "How parse trees are evaluated?",
          "answer": "Buttom up",
          "choices": ["Top down", "Buttom up"]
        },
        "q3": {
          "type": "select",
          "description": "$\\textbf{Example}$. Expression grammar<br> $G=(\\{E,I\\},\\{a,b,+,∗,(,)\\},E,P)$,$P$=<br> $E \\rightarrow E+E | E*E | (E) | I$ <br>    $I\\rightarrow a | b$ <br> Derivation of $a+b∗a$ is:<br> $E\\Rightarrow \\underline{E}+E\\Rightarrow \\underline{I}+E\\Rightarrow a+\\underline{E}\\Rightarrow a+\\underline{E}*E\\Rightarrow a+\\underline{I}*E\\Rightarrow a+b*\\underline{E}\\Rightarrow a+b*\\underline{I}\\Rightarrow a+b*a$<br> Corresponding derivation tree is:",
          "question": "Since Derivation trees of expressions are evaluated bottom up, which operator will be done first?",
          "answer": "multiplication",
          "choices": ["multiplication", "addition"]
        },
        "q4": {
          "type": "select",
          "description": "$\\textbf{Example}$. Expression grammar<br> $G=(\\{E,I\\},\\{a,b,+,∗,(,)\\},E,P)$,$P$=<br> $E \\rightarrow E+E | E*E | (E) | I$ <br>    $I\\rightarrow a | b$ <br> Derivation of $a+b∗a$ is:<br> $E\\Rightarrow \\underline{E}+E\\Rightarrow \\underline{I}+E\\Rightarrow a+\\underline{E}\\Rightarrow a+\\underline{E}*E\\Rightarrow a+\\underline{I}*E\\Rightarrow a+b*\\underline{E}\\Rightarrow a+b*\\underline{I}\\Rightarrow a+b*a$<br> Corresponding derivation tree is:",
          "question": "Since Derivation trees of expressions are evaluated bottom up, Let $a = 2, \\quad b= 4$ the value of $a+b*a$ from the tree on the left will be",
          "answer": "10",
          "choices": ["10", "12"]
        },
        "q5": {
          "type": "true/false",
          "description": "$\\textbf{Example}$. Expression grammar<br> $G=(\\{E,I\\},\\{a,b,+,∗,(,)\\},E,P)$,$P$=<br> $E \\rightarrow E+E | E*E | (E) | I$ <br>    $I\\rightarrow a | b$ <br> Derivation of $a+b∗a$ is:<br> $E\\Rightarrow \\underline{E}+E\\Rightarrow \\underline{I}+E\\Rightarrow a+\\underline{E}\\Rightarrow a+\\underline{E}*E\\Rightarrow a+\\underline{I}*E\\Rightarrow a+b*\\underline{E}\\Rightarrow a+b*\\underline{I}\\Rightarrow a+b*a$<br> Corresponding derivation tree is:",
          "question": "[T|F]We can find a different derivation tree for the same string $a+b*a$ using the same grammar.",
          "answer": "True",
          "choices": []
        },
        "q6": {
          "type": "true/false",
          "description": "$\\textbf{Example}$. Expression grammar<br> $G=(\\{E,I\\},\\{a,b,+,∗,(,)\\},E,P)$,$P$=<br> $E \\rightarrow E+E | E*E | (E) | I$ <br>    $I\\rightarrow a | b$ <br> Another derivation of $a+b∗a$ is:Another derivation of a+b*a is:<br> $E\\Rightarrow \\underline{E}*E\\Rightarrow \\underline{E}+E*E\\Rightarrow \\underline{I}+E*E\\Rightarrow a+\\underline{E}*E\\Rightarrow a+\\underline{I}*E\\Rightarrow a+b*\\underline{E}\\Rightarrow a+b*\\underline{I}\\Rightarrow a+b*a$<br> Corresponding derivation tree will be:",
          "question": "[T|F]We can find a different derivation tree for the same string $a+b*a$ using the same grammar.",
          "answer": "True",
          "choices": []
        },
        "q7": {
          "type": "select",
          "description": "$\\textbf{Example}$. Expression grammar<br> $G=(\\{E,I\\},\\{a,b,+,∗,(,)\\},E,P)$,$P$=<br> $E \\rightarrow E+E | E*E | (E) | I$ <br>    $I\\rightarrow a | b$ <br> Another derivation of $a+b∗a$ is:Another derivation of a+b*a is:<br> $E\\Rightarrow \\underline{E}*E\\Rightarrow \\underline{E}+E*E\\Rightarrow \\underline{I}+E*E\\Rightarrow a+\\underline{E}*E\\Rightarrow a+\\underline{I}*E\\Rightarrow a+b*\\underline{E}\\Rightarrow a+b*\\underline{I}\\Rightarrow a+b*a$<br> Corresponding derivation tree will be:",
          "question": "Since Derivation trees of expressions are evaluated bottom up, Let $a = 2, \\quad b= 4$ the value of $a+b*a$ from the tree on the left will be",
          "answer": "12",
          "choices": ["10","12"]
        },
        "q8": {
          "type": "select",
          "description": "Since the same string can have different derivation trees, the grammar is called ambiguous grammar.",
          "question": "Which tree is the correct one?",
          "answer": "both are correct based on the given grammar",
          "choices": ["On the left","On the right", "both are correct based on the given grammar"]
        },
        "q9": {
          "type": "select",
          "description": "Since the same string can have different derivation trees, the grammar is called ambiguous grammar.",
          "question": "Which tree will be used by the compiler?",
          "answer": "Neither, the compiler will issue an error due to the ambiguity",
          "choices": ["On the left","On the right", "Neither, the compiler will issue an error due to the ambiguity"]
        },
        "q12": {
          "type": "select",
          "description": "Unfortunaitly, there is no algorithm to remove ambiguity. But there are some common tricks<br/>Operator precedence",
          "question": "Which operator has the highest precedence?",
          "answer": "*",
          "choices": ["*", "+", "-"]
        },
        "q13": {
          "type": "true/false",
          "description": "Unfortunaitly, there is no algorithm to remove ambiguity. But there are some common tricks<br/>Operator precedence<br/>Operator associativity",
          "question": "[T|F]]Operator associativity means that if we have multiple operators with the same precedence, which one will be applied first.",
          "answer": "True",
          "choices": []
        },
        "q14": {
          "type": "select",
          "description": "Unfortunaitly, there is no algorithm to remove ambiguity. But there are some common tricks<br/>Operator precedence<br/>Operator associativity",
          "question": "What are the types of operator associativity?",
          "answer": ["Left associativity", "right associativity"],
          "choices": ["Left associativity", "right associativity"]
        },
        "q15": {
          "type": "select",
          "description": "Unfortunaitly, there is no algorithm to remove ambiguity. But there are some common tricks<br/>Operator precedence<br/>Operator associativity",
          "question": "Which of the following are left associative operators?",
          "answer": ["+","-","*","/"],
          "choices": ["+","-","*","/","power operator"]
        },
        "q16": {
          "type": "select",
          "description": "Unfortunaitly, there is no algorithm to remove ambiguity. But there are some common tricks<br/>Operator precedence<br/>Operator associativity",
          "question": "Which of the following are right associative operators?",
          "answer": ["power operator"],
          "choices": ["+","-","*","/","power operator"]
        },
        "q22": {
          "type": "select",
          "description": "So, to remove the ambiguity for that grammar, we need to ensure the correct precedence rule for arithmatic operations.",
          "question": "Which operator must be done first?",
          "answer": "multiplication",
          "choices": ["multiplication", "addition"]
        },
        "q23": {
          "type": "select",
          "description": "Now let us try to remove the ambiguity for the grammar $G=(\\{E,I\\},\\{a,b,+,∗,(,)\\},E,P)$,$P$=<br> $E \\rightarrow E+E | E*E | (E) | I$ <br>    $I\\rightarrow a | b$",
          "question": "Since parse trees are evaluated in buttom up, which operator must be lower in the tree?",
          "answer": "multiplication",
          "choices": ["multiplication", "addition"]
        },
        "q25": {
          "type": "select",
          "description": "Rewrite the grammar as an unambiguous grammar. (Specifically, with the meaning that multiplication has higher precedence than addition.) <br> $E\\rightarrow E+T$ | $T$<br>    $T\\rightarrow T∗F$ | $F$<br>  $F\\rightarrow I$ | $(E)$<br>$I\\rightarrow a$ | $b$ <br>There is only one derivation tree for $a+b∗a$:",
          "question": "Can you get a derivation tree with the other meaning of $a+b*c$, when * is closer to the root of the tree?",
          "answer": "No",
          "choices": ["No", "Yes"]
        },
        "q27": {
          "type": "select",
          "description": "$\\textbf {Definition}$: If $L$ is CFL and $G$ is an unambiguous CFG such that $L=L(G)$, then $L$ is unambiguous.",
          "question": "The language for mathmatical expressions is unambiguous language",
          "answer": "Yes, because it has an unambiguous grammar",
          "choices": ["No", "Yes, because it has an unambiguous grammar"]
        }
      }
    }
  }
  