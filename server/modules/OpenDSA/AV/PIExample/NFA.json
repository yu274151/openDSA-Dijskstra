{
    "translations": {
        "en": {
            "q0": {
                "type": "multiple",
                "description": "Define a NFA as $(Q, \\Sigma, \\delta, Q_0, F)$ where <br />$Q$ is a finite set of states <br />$\\Sigma$ is the input alphabet (a finite set) <br />$\\delta: Q \\times(\\Sigma \\cup \\{\\lambda\\}) \\rightarrow 2^Q$ ($2^Q$ here means the power set of $Q$)<br />$Q_0$ is the intial state ($q_0 \\in Q$)  <br />$F \\subseteq Q$ is a set of final states. ",
                "question": "What part of the definition of NFA is different from definition of DFA?",
                "answer": [
                    "$\\delta$"
                ],
                "choices": [
                    "$Q$",
                    "$\\Sigma$",
                    "$F$",
                    "$Q_0$",
                    "$\\delta$",
                    "nothing"
                ]
            },
            "q2": {
                "type": "multiple",
                "description": "While the result of $\\delta$ for the DFA is some state $q \\in Q$, the result of $\\delta$ for the NFA is any subset of Q",
                "question": "A NFA can have a state with 2 transitions for the same input alphabet.",
                "answer": [
                    "True"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q3": {
                "type": "multiple",
                "description": "While the result of $\\delta$ for the DFA is some state $q \\in Q$, the result of $\\delta$ for the NFA is any subset of Q",
                "question": "A NFA can not have 3 or more transitions from a state using the same input alphabet.",
                "answer": [
                    "False"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q1": {
                "type": "multiple",
                "description": "Non-deterministic means that it allows choices. From a state on input $b$, $\\delta$ might include transitions to more than one state.",
                "question": "A NFA's state can always be determined.",
                "answer": [
                    "False"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q4": {
                "type": "select",
                "description": "Given that the NFA below is in q0 and the given input is 'a'. ",
                "question": "What are the possible states to transition to?",
                "answer": [
                    "q1",
                    "q2"
                ],
                "choices": [
                    "q0",
                    "q1",
                    "q2",
                    "q3"
                ]
            },
            "q15": {
                "type": "multiple",
                "question": "What is $\\delta$(q0,a)?",
                "answer": [
                    "{q1,q2}"
                ],
                "choices": [
                    "q0",
                    "q1",
                    "{q1}",
                    "{q2}",
                    "{q1,q2}",
                    "{{q1},{q2}}"
                ]
            },
            "q5": {
                "type": "multiple",
                "description": "A $\\lambda$ transition is a 'free ride' to another state without any input.",
                "question": "A $\\lambda$ transition does not require a symbol to transition to that state.",
                "answer": [
                    "True"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q6": {
                "type": "multiple",
                "description": "A $\\lambda$ transition is a 'free ride' to another state without any input.",
                "question": "A $\\lambda$ transition cannot $\\lambda$ transition again to another state.",
                "answer": [
                    "False"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q7": {
                "type": "select",
                "question": "Which state(s) is the NFA in when the machine starts?",
                "answer": [
                    "q0",
                    "q1",
                    "q2"
                ],
                "choices": [
                    "q0",
                    "q1",
                    "q2",
                    "q3",
                    "q4",
                    "q5",
                    "q6"
                ]
            },
            "q8": {
                "type": "select",
                "question": "Which state(s) can the NFA go to from the start state when read letter $a$?",
                "answer": [
                    "q3",
                    "q4"
                ],
                "choices": [
                    "q0",
                    "q1",
                    "q2",
                    "q3",
                    "q4",
                    "q5",
                    "q6"
                ]
            },
            "q9": {
                "type": "select",
                "description": "$q_j \\in \\delta^*(q_i, w)$ if and only if there exists some walk from $q_i$ to $q_j$ where w is some input",
                "question": "What is in $\\delta^*(q_0, ab)$ = ?",
                "answer": [
                    "q5",
                    "q6",
                    "q1"
                ],
                "choices": [
                    "q0",
                    "q1",
                    "q2",
                    "q3",
                    "q4",
                    "q5",
                    "q6"
                ]
            },
            "q23": {
                "type": "multiple",
                "description": "For an NFA $L(M)= \\{w \\in {\\Sigma}^{*} \\mid \\delta^{*}(q_0,w) \\cap F \\neq \\emptyset \\}$ <br /> This means that the machine accepts all strings $w$ from the set of all possible strings (generated from the alphabet $\\Sigma$) such that the states reachable on $w$ from the start state ($q_0$) is in the final state set.",
                "question": "For this NFA and $w$=ab how many paths exist?",
                "answer": [
                    "2"
                ],
                "choices": [
                    "0",
                    "1",
                    "2",
                    "3"
                ]
            },
            "q14": {
                "type": "multiple",
                "description": " A NFA tries every possible path from the start state for the given input. From that set of ALL possible paths, if any ends in a state that is final the NFA will ACCEPT the input. If that set is empty (not possible to make a path using input) or those path(s) do not end in a final state, the NFA will REJECT. ",
                "question": "A NFA needs every possible path using the input string to end in a final state.",
                "answer": [
                    "False"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q12": {
                "type": "multiple",
                "description": "There is an algorithm that converts any NFA into a DFA.",
                "question": "A NFA with one or more $\\lambda$ transitions, can not be converted to a DFA.",
                "answer": [
                    "False"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q10": {
                "type": "multiple",
                "description": "DFAs cannot have $\\lambda$ transitions and multiple transitions using same alphabet.",
                "question": "A NFA has more power (able to do more things) than a DFA.",
                "answer": [
                    "False"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            },
            "q111": {
                "type": "multiple",
                "description": "Correct! While NFA allow $\\lambda$ and multiple transitions they can not solve any new problems that can not be done with a DFA. Also, since we have an ALGORITHM that converts any NFA to DFA then both of them are equivalent.",
                "question": "The concept of NFA can make it easier to comprehend, read, and simplify adding multiple languanges together. ",
                "answer": [
                    "True"
                ],
                "choices": [
                    "True",
                    "False"
                ]
            }
        }
    }
}
